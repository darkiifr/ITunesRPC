<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <!-- Styles pour les indicateurs d'état -->
    
    <!-- Style pour l'indicateur d'état connecté -->
    <Style x:Key="ConnectedIndicator" TargetType="Ellipse">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Height" Value="8"/>
        <Setter Property="Fill" Value="#FF4CAF50"/> <!-- Vert -->
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Style.Triggers>
            <EventTrigger RoutedEvent="Ellipse.Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation
                            Storyboard.TargetProperty="Opacity"
                            From="1.0" To="0.6" Duration="0:0:1"
                            AutoReverse="True" RepeatBehavior="Forever"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>
    
    <!-- Style pour l'indicateur d'état déconnecté -->
    <Style x:Key="DisconnectedIndicator" TargetType="Ellipse">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Height" Value="8"/>
        <Setter Property="Fill" Value="#FFF44336"/> <!-- Rouge -->
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    
    <!-- Style pour l'indicateur d'état en attente -->
    <Style x:Key="WaitingIndicator" TargetType="Ellipse">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Height" Value="8"/>
        <Setter Property="Fill" Value="#FFFFEB3B"/> <!-- Jaune -->
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Style.Triggers>
            <EventTrigger RoutedEvent="Ellipse.Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation
                            Storyboard.TargetProperty="Opacity"
                            From="1.0" To="0.3" Duration="0:0:0.5"
                            AutoReverse="True" RepeatBehavior="Forever"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>
    
    <!-- Style pour l'indicateur d'état inactif -->
    <Style x:Key="InactiveIndicator" TargetType="Ellipse">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Height" Value="8"/>
        <Setter Property="Fill" Value="#FFA9A9A9"/> <!-- Gris -->
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    
    <!-- Style pour les notifications de mise à jour -->
    <Style x:Key="UpdateNotification" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource AccentBrush}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Style.Triggers>
            <EventTrigger RoutedEvent="TextBlock.Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation
                            Storyboard.TargetProperty="Opacity"
                            From="1.0" To="0.7" Duration="0:0:1.5"
                            AutoReverse="True" RepeatBehavior="Forever"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>
    
    <!-- Style pour les badges de notification -->
    <Style x:Key="NotificationBadge" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource AccentBrush}"/>
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="Padding" Value="5,2"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    
    <!-- Style pour le texte des badges de notification -->
    <Style x:Key="NotificationBadgeText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    
    <!-- Style pour le panneau de barre de statut -->
    <Style x:Key="StatusBarPanel" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,1,0,0"/>
    </Style>
</ResourceDictionary>